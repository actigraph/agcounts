digraph G {
    node [shape=rect, width=3];
    subgraph cluster_raw {
        peripheries=0
        raw [
            label = "Raw data coming from devices other than CPIW\n sampled at 30, 40, ..., 100 Hz";
        ];
        raw_cpiw [
            label = "Raw data coming from CPIW\n sampled at 32, 64, 128 or 256 Hz";
        ];
    }    
  
    subgraph cluster_alg {
        labeljust="r";
        label = "Algorithm";
        frequency [
            label = "Sampling frequency divisible by 3?";
            shape = diamond;
            height = 1;
            group=g1;
        ];

        upsample [ label = "Upsample by a factor of 3 and lowpass filter";
        group=g1 ]

        downsample [label = "Downsample to 30 Hz"; group=g2]

        bandpass [label = "Bandpass filter (7th order IIR)"; group=g1]

        gain [label = "Rescale (Gain)"]

        abs [label = "Take absolute value"; group=g3]

        thr [label = "Threshold"; group=g1]

        movavg [label = "Downsample to 10 Hz by\nnon-overlapping moving average"]

        accumulation [
            label = "Accumulation: Sum data within\npre-defined epoch lengths";
            group=g2]
        
        frequency -> upsample [label="No"]
        upsample -> downsample
        frequency -> downsample [label="Yes"]
        downsample -> bandpass -> gain
        gain -> abs -> thr 
        thr-> movavg -> accumulation; 

        {rank = same upsample downsample}
        {rank = same bandpass gain abs }
        {rank = same thr movavg accumulation }
    }

    raw -> frequency 
    raw_cpiw -> downsample
    counts [label = "Counts"]
    accumulation -> counts
    downsample -> abs [style=invis]
    #frequency -> bandpass [style=invis]
    #frequency -> downsample [style=invis]
    #thr -> accumulation [style=invis]

    raw, raw_cpiw, counts [style="filled",
     fillcolor=gainsboro]
}