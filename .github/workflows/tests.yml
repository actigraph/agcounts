name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
    ci:
      strategy:
        fail-fast: true
        matrix:
          python-version: [3.9]
          poetry-version: [1.1.11]
          os: [ubuntu-latest]
      runs-on: ${{ matrix.os }}
      steps:
        - uses: actions/checkout@v2
          with:
            lfs: true
            fetch-depth: 0
        - name: Checkout LFS objects
          run: git lfs checkout
        - name: Cache Poetry cache
          uses: actions/cache@v2
          with:
            path: ~/.cache/pypoetry
            key: poetry-cache-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ env.POETRY_VERSION }}-${{ hashFiles('**/pyproject.toml') }}
        # virtualenv cache should depend on OS, Python version and `poetry.lock` (and optionally workflow files).
        - name: Cache Packages
          uses: actions/cache@v2
          with:
            path: ~/.local
            key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
        - name: Run image
          uses: abatilo/actions-poetry@v2.1.3
          with:
            poetry-version: ${{ matrix.poetry-version }}
        - name: Install dependencies
          run: poetry install
        - name: Style
          run: poetry run make lint
        - name: Test
          run: poetry run make test_fast
